############################################################

trigger:
  - master
  - feature/*
pool:
  name: self-hosted

variables:
  azureSubscriptionEndpoint: azure_pass
  dockerRegistryServiceConnection: p-acr
  imageRepository: w8-private-acr-repo
  containerRegistry: stasprivateacr001.azurecr.io
  dockerfilePath: Dockerfile
  tag: $(Build.BuildNumber)
  containerName: wt_app

stages:

  - stage: CI
    jobs:
      - job: build_and_push
        displayName: build docker image
        workspace:
          clean: all
        steps:
          - script: |
               sudo apt update && sudo apt-get install -y \
               ca-certificates \
               curl \
               gnupg \
               lsb-release && sudo mkdir -p /etc/apt/keyrings && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg && echo \
               "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
                $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null && sudo apt-get update && sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin -y
                sudo usermod -aG docker $USER && sudo usermod -aG root $USER && sudo chmod 777 /var/run/docker.sock
                sudo apt install docker-compose -y
                docker-compose up -d --build
            displayName: install docker on agent
          
          # - task: Docker@2
          #   inputs:
          #     containerRegistry: $(dockerRegistryServiceConnection)
          #     repository: $(imageRepository)
          #     command: build
          #     Dockerfile: $(dockerfilePath)
          #     tags: $(tag)
          #   displayName: build docker image
