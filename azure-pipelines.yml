# name: <<YOUR PIPELINE NAME CONFIG>>
trigger:
  - master
  # - feature/*
pool: w7pool
variables:
  dockerRegistryServiceConnection: stas_acr_service
  imageRepository: w8repo
  containerRegistry: staskloydocker.azurecr.io
  dockerfilePath: Dockerfile
  tag: $(Build.BuildNumber)
stages:
  - stage: CI
    jobs:
      - job: install_prerequisites
        workspace:
          clean: all
        steps:
          - task: CmdLine@2
            inputs:
              script: sudo apt update && sudo apt-get install -y \
                >     ca-certificates \
                >     curl \
                >     gnupg \
                >     lsb-release && sudo mkdir -p /etc/apt/keyrings && curl
                -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg
                --dearmor -o /etc/apt/keyrings/docker.gpg && echo \
                >     "deb [arch=$(dpkg --print-architecture)
                signed-by=/etc/apt/keyrings/docker.gpg]
                https://download.docker.com/linux/ubuntu \
                >     $(lsb_release -cs) stable" | sudo tee
                /etc/apt/sources.list.d/docker.list > /dev/null && sudo apt-get
                update && sudo apt-get install docker-ce docker-ce-cli
                containerd.io docker-compose-plugin -y
            displayName: install docker
          - task: Docker@2
            inputs:
              containerRegistry: $(dockerRegistryServiceConnection)
              repository: $(imageRepository)
              command: buildAndPush
              Dockerfile: $(dockerfilePath)
              tags: $(tag)

    
  

# # Continuous Deployment Process for Staging Environment
# - stage: DeployToStaging
#   condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
#   jobs:

#     - job: waitForValidation
#       displayName: Wait for external validation
#       pool: server
#       timeoutInMinutes: 4320 # job times out in 3 days
#       steps:
#       - task: ManualValidation@0
#         timeoutInMinutes: 1440 # task times out in 1 day
#         inputs:
#           notifyUsers: |
#             test@test.com
#             example@example.com
#           instructions: 'Please validate the build configuration and resume'
#           onTimeout: 'resume'
      
    
#   - deployment: staging
#     displayName: Deploy to Staging
#     environment:
#       name: <<YOUR ENVIRONMENT NAME>>
#       resourceType: VirtualMachine
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - <<YOUR TASKS>>
          
# Continuous Delivery Process for Production Environment
# - stage: DeployToProduction
#   condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
#   jobs:
#   - deployment: production
#     displayName: Deploy to Production
#     environment:
#       name: <<YOUR ENVIRONMENT NAME>>
#       resourceType: VirtualMachine
    # strategy:
    #   runOnce:
    #     deploy:
    #       steps:
    #       - <<YOUR TASKS>>