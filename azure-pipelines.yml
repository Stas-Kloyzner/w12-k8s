# #############################################
# name: 'docker_app_ci_cd-$(tag)'

trigger:
- master
- feature/*

pool:
  name: w7pool

variables:
  dockerRegistryServiceConnection: demo-acr
  imageRepository: w8-private-acr-repo
  containerRegistry: stasprivateacr.azurecr.io
  dockerfilePath: Dockerfile
  tag: $(Build.BuildNumber)

stages:
  - stage: Prerequisites
    jobs:
      - job: install_prerequisites
        workspace:
          clean: all
        steps:
        - script: |
           sudo apt update
           sudo apt install software-properties-common
           sudo apt-add-repository --yes --update ppa:ansible/ansible
           sudo apt install ansible -y
           ansible --version
           sudo apt-get install sshpass
    displayName: 'install ansible'

  - stage: CI
    jobs:
      - job: build_and_push
        workspace:
          clean: all
        steps:
          - task: Docker@2
            inputs:
              containerRegistry: $(dockerRegistryServiceConnection)
              repository: $(imageRepository)
              command: buildAndPush
              Dockerfile: $(dockerfilePath)
              tags: $(tag)


  # - stage: Deploy_To_Staging
  #   condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  #   jobs:
  #     - job: Deploy_To_Staging
  #       workspace:
  #         clean: all
  #       steps:
  #             - task: Docker@2
  #               inputs:
  #                 containerRegistry: 'demo-acr'
  #                 command: 'start'
  #                 container: '$(tag)'


# Continuous Deployment Process for Staging Environment
  - stage: DeployToStaging
    condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
    jobs:
    - deployment: staging
      displayName: Deploy to Staging
      environment:
        name: <<YOUR ENVIRONMENT NAME>>
        resourceType: VirtualMachine
      strategy:
        runOnce:
          deploy:
            steps:
            - task: Docker@1
              displayName: "docker pull from ACR"
              inputs:
                azureSubscriptionEndpoint: '<service connection>'
                azureContainerRegistry: <your ACR name>.azurecr.io
                command: pull
                arguments: '<your ACR name>.azurecr.io/<path to your image>:<version>'







          
# Continuous Delivery Process for Production Environment
  # - stage: DeployToProduction
  #   condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  #   jobs:
  #     - job: manual_approval
  #       displayName: "Manual Approval"
  #       pool: server
  #       steps:
  #         - task: ManualValidation@0
  #           inputs:
  #             notifyUsers: 'w4p-a@outlook.com'
#   - deployment: production
#     displayName: Deploy to Production
#     environment:
#       name: <<YOUR ENVIRONMENT NAME>>
#       resourceType: VirtualMachine
    # strategy:
    #   runOnce:
    #     deploy:
    #       steps:
    #       - <<YOUR TASKS>>